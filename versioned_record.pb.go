// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.2
// 	protoc        v3.21.12
// source: versioned_record.proto

package logging

import (
	v1 "github.com/zitadel/logging/records/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VersionedRecord struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Record:
	//
	//	*VersionedRecord_RecordV1
	Record        isVersionedRecord_Record `protobuf_oneof:"record"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VersionedRecord) Reset() {
	*x = VersionedRecord{}
	mi := &file_versioned_record_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VersionedRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionedRecord) ProtoMessage() {}

func (x *VersionedRecord) ProtoReflect() protoreflect.Message {
	mi := &file_versioned_record_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionedRecord.ProtoReflect.Descriptor instead.
func (*VersionedRecord) Descriptor() ([]byte, []int) {
	return file_versioned_record_proto_rawDescGZIP(), []int{0}
}

func (x *VersionedRecord) GetRecord() isVersionedRecord_Record {
	if x != nil {
		return x.Record
	}
	return nil
}

func (x *VersionedRecord) GetRecordV1() *v1.Record {
	if x != nil {
		if x, ok := x.Record.(*VersionedRecord_RecordV1); ok {
			return x.RecordV1
		}
	}
	return nil
}

type isVersionedRecord_Record interface {
	isVersionedRecord_Record()
}

type VersionedRecord_RecordV1 struct {
	RecordV1 *v1.Record `protobuf:"bytes,1,opt,name=record_v1,json=recordV1,proto3,oneof"` // RecordV2 record_v2 = 2;
}

func (*VersionedRecord_RecordV1) isVersionedRecord_Record() {}

var File_versioned_record_proto protoreflect.FileDescriptor

var file_versioned_record_proto_rawDesc = []byte{
	0x0a, 0x16, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x73, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x43, 0x0a, 0x0f, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x12, 0x26, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x76,
	0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x48, 0x00, 0x52, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x56, 0x31, 0x42, 0x08, 0x0a, 0x06,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x42, 0x1c, 0x5a, 0x1a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x7a, 0x69, 0x74, 0x61, 0x64, 0x65, 0x6c, 0x2f, 0x6c, 0x6f, 0x67,
	0x67, 0x69, 0x6e, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_versioned_record_proto_rawDescOnce sync.Once
	file_versioned_record_proto_rawDescData = file_versioned_record_proto_rawDesc
)

func file_versioned_record_proto_rawDescGZIP() []byte {
	file_versioned_record_proto_rawDescOnce.Do(func() {
		file_versioned_record_proto_rawDescData = protoimpl.X.CompressGZIP(file_versioned_record_proto_rawDescData)
	})
	return file_versioned_record_proto_rawDescData
}

var file_versioned_record_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_versioned_record_proto_goTypes = []any{
	(*VersionedRecord)(nil), // 0: VersionedRecord
	(*v1.Record)(nil),       // 1: Record
}
var file_versioned_record_proto_depIdxs = []int32{
	1, // 0: VersionedRecord.record_v1:type_name -> Record
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_versioned_record_proto_init() }
func file_versioned_record_proto_init() {
	if File_versioned_record_proto != nil {
		return
	}
	file_versioned_record_proto_msgTypes[0].OneofWrappers = []any{
		(*VersionedRecord_RecordV1)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_versioned_record_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_versioned_record_proto_goTypes,
		DependencyIndexes: file_versioned_record_proto_depIdxs,
		MessageInfos:      file_versioned_record_proto_msgTypes,
	}.Build()
	File_versioned_record_proto = out.File
	file_versioned_record_proto_rawDesc = nil
	file_versioned_record_proto_goTypes = nil
	file_versioned_record_proto_depIdxs = nil
}
